openapi: 3.0.1
info:
  title: Snowpeak
  version: 1.0.0
servers:
- url: "http://localhost:8080/snowpeak"
  variables:
    server:
      default: http://localhost
    port:
      default: port
paths:
  /locations:
    get:
      summary: Snowpeak locations resource
      operationId: getLocations
      responses:
        "200":
          description: Ok
          headers:
            Cache-Control:
              schema:
                type: string
                default: "must-revalidate,public,max-age=3600"
            ETag:
              schema:
                type: string
            Last-Modified:
              schema:
                type: string
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/Locations'
        "500":
          description: InternalServerError
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/SnowpeakError'
  /locations/{id}/rooms:
    get:
      summary: Snowpeak rooms resource
      operationId: getLocationsIdRooms
      parameters:
      - name: id
        in: path
        description: Unique identification of location
        required: true
        schema:
          type: string
      - name: startDate
        in: query
        description: Start date in format yyyy-mm-dd
        required: true
        schema:
          type: string
      - name: endDate
        in: query
        description: End date in format yyyy-mm-dd
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/Rooms'
        "500":
          description: InternalServerError
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/SnowpeakError'
  /reservations:
    post:
      summary: Snowpeak create reservation resource
      operationId: postReservations
      requestBody:
        description: Reservation representation
        content:
          application/vnd.snowpeak.resort+json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        "200":
          description: Ok
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/ReservationReceipt'
        "409":
          description: Conflict
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/SnowpeakError'
        "500":
          description: InternalServerError
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/SnowpeakError'
  /reservations/{id}:
    put:
      summary: Snowpeak create/update reservation resource
      operationId: putReservationsId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Reservation representation
        content:
          application/vnd.snowpeak.resort+json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        "200":
          description: Ok
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/ReservationReceipt'
        "409":
          description: Conflict
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/SnowpeakError'
        "500":
          description: InternalServerError
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/SnowpeakError'
    delete:
      summary: Snowpeak cancel reservation resource
      operationId: deleteReservationsId
      parameters:
      - name: id
        in: path
        description: Unique identification of reservation
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/ReservationReceipt'
        "500":
          description: InternalServerError
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/SnowpeakError'
  /payments/{id}:
    post:
      summary: Snowpeak payment resource
      operationId: postPaymentsId
      parameters:
      - name: id
        in: path
        description: Unique identification of reservation
        required: true
        schema:
          type: string
      requestBody:
        description: Payment representation
        content:
          application/vnd.snowpeak.resort+json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        "200":
          description: Ok
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/PaymentReceipt'
        "409":
          description: Conflict
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/SnowpeakError'
        "500":
          description: InternalServerError
          content:
            application/vnd.snowpeak.resort+json:
              schema:
                $ref: '#/components/schemas/SnowpeakError'
components:
  schemas:
    ReserveRoom:
      required:
      - count
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identification of the room
        count:
          type: integer
          description: Number of rooms
          format: int64
      description: Represents rooms be reserved
    Reservation:
      required:
      - endDate
      - reserveRooms
      - startDate
      type: object
      properties:
        reserveRooms:
          type: array
          description: Rooms to be reserved
          items:
            $ref: '#/components/schemas/ReserveRoom'
        startDate:
          type: string
          description: Start date in yyyy-mm-dd
        endDate:
          type: string
          description: End date in yyyy-mm-dd
      description: Represents a reservation of rooms
    Payment:
      required:
      - cardNumber
      - cardholderName
      - expiryMonth
      - expiryYear
      type: object
      properties:
        cardholderName:
          type: string
          description: Name of the card holder
        cardNumber:
          type: integer
          description: Card number
          format: int64
        expiryMonth:
          type: integer
          description: Expiration month of the card in mm
          format: int64
        expiryYear:
          type: integer
          description: Expiration year of the card in yyyy
          format: int64
      description: Represents payment for rooms
    PaymentReceipt:
      required:
      - currency
      - id
      - lastUpdated
      - rooms
      - total
      type: object
      properties:
        id:
          type: string
          description: 'Unique identification '
        currency:
          type: string
          description: Currency used in price
        total:
          type: number
          description: Total amount paid
          format: double
        lastUpdated:
          type: string
          description: Last updated time stamp
        rooms:
          type: array
          description: Booked rooms
          items:
            $ref: '#/components/schemas/Room'
      description: Represents receipt for the payment
    Locations:
      required:
      - locations
      type: object
      properties:
        locations:
          type: array
          description: collection of locations
          items:
            $ref: '#/components/schemas/Location'
      description: Represents a collection of locations
    ReservationReceipt:
      required:
      - currency
      - expiryDate
      - id
      - lastUpdated
      - reservation
      - state
      - total
      type: object
      properties:
        id:
          type: string
          description: Unique identification of the receipt
        expiryDate:
          type: string
          description: Expiry date in yyyy-mm-dd
        lastUpdated:
          type: string
          description: Last updated time stamp
        currency:
          type: string
          description: Currency used in price
        total:
          type: number
          description: Total payable
          format: double
        reservation:
          $ref: '#/components/schemas/Reservation'
        state:
          type: string
          description: State of the reservation
          enum:
          - CANCELED
          - VALID
      description: Represents a receipt for the reservation
    Room:
      required:
      - capacity
      - category
      - count
      - currency
      - id
      - price
      - status
      - wifi
      type: object
      properties:
        id:
          type: string
          description: Unique identification of the room
        category:
          type: string
          description: Types of rooms available
          enum:
          - FAMILY
          - KING
          - DELUXE
        capacity:
          type: integer
          description: Number of people that can be accommodate
          format: int64
        wifi:
          type: boolean
          description: Availability of wifi
        status:
          type: string
          description: Availability of room
          enum:
          - BOOKED
          - RESERVED
          - AVAILABLE
        currency:
          type: string
          description: Currency used in price
        price:
          type: number
          description: Cost for the room
          format: double
        count:
          type: integer
          description: Number of rooms as per the status
          format: int64
      description: Represents resort room
    Location:
      required:
      - address
      - id
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the location
        id:
          type: string
          description: Unique identification of the location
        address:
          type: string
          description: Address of the location
      description: Represents location
    SnowpeakError:
      required:
      - msg
      type: object
      properties:
        msg:
          type: string
          description: Error message
      description: Represents the unexpected error
    Rooms:
      required:
      - rooms
      type: object
      properties:
        rooms:
          type: array
          description: Array of rooms
          items:
            $ref: '#/components/schemas/Room'
      description: Represents a collection of resort rooms
